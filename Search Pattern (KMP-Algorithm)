Question :-
Given two strings, one is a text string, txt and other is a pattern string, pat. The task is to print the indexes of all the occurences of pattern string in the text string. Use one-based indexing while returing the indices. 
Note: Return an empty list incase of no occurences of pattern. Driver will print -1 in this case.

Example :-
Input:
txt = "geeksforgeeks"
pat = "geek"
Output: 
1 9
Explanation: 
The string "geek" occurs twice in txt, one starts are index 1 and the other at index 9. 

Solution :-

#include<bits/stdc++.h>
using namespace std;
class Solution
{
    public:
        vector <int> search(string pat, string txt)
        {
            //code here
                vector<int>ans;
            for(int i=0;i<=txt.size()-pat.size();i++){
                if(txt[i]==pat[0]){
                    if(txt.substr(i,pat.size())==pat) ans.push_back(i+1);
                }
            }
            return ans;
        }
     
};
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string S, pat;
        cin >> S >> pat;
        Solution ob;
        vector <int> res = ob.search(pat, S);
        if (res.size()==0)
            cout<<-1<<endl;
        else {
            for (int i : res) cout << i << " ";
            cout << endl;
        }
    }
    return 0;
}
